Телеграмм бот написан на функциях.
1.import - одна из основных операций, которая позволяет использовать код одного файла в другом. Эта возможность позволяет создавать модульные и многокомпонентные приложения, где каждый файл или модуль выполняет свою специфическую задачу.
2.@bot. message_handler(func=lambda message: True) - Обработчик всех входящих сообщений. - `func` (функция): Функция, которая определяет, должно ли сообщение быть обработано.
3.def - Ключевое слово def сообщает Python, что вы определяете функцию.
4.def welcome(message) - Обработка и создание кнопок на главном меню в боте.Также является приветствием бота пользователю.
5.if-elif-else в Python — это способ написать программный код так, чтобы он выдавал результат в зависимости от того, выполняется определенное условие или нет.
6.def get_photo(message) - Обработка фото. То есть, если пользователь пришлёт фото, то бот отреагирует на него.
7.def info(message) - это обработка обычных текстовых команд, описанных в кнопках. То есть, функция обрабатывает и выполняет действия с кнопок и др.
8.ReplyKeyboardMarkup — это шаблоны сообщений. К примеру, ваш бот задаёт пользователю вопрос и предлагает варианты ответа.
9.bot.send_message - функиция, отвечающая за передачу сообщение пользователю через бота.(Бот отправляет сообщение пользователю).
10.content_types=['text'] это настройка на то чтобы бот писал привет,если пользователь будет писать сообщение,но на фото,видео и аудио не будет отвечать.
11.KeyboardButton(text=" "), где в параметре text мы передаём отображаемое название кнопки. После этого необходимо создать клавиатуру и рассказать ей про наши кнопки. Делается это с помощью метода types.
12.resize_keyboard=True - это атрибут, который используется в Telegram Bot API для управления размером клавиатуры уведомлений. Установка значения True для этого атрибута позволяет автоматически изменять размер клавиатуры в зависимости от количества кнопок.
13.markup.row(button) - это функция, которая создает HTML разметку для кнопки.
14.def catalogChapter(message) - это функция, отвечающая за раздел каталога, отображение кнопок. 
15.def proteinChapter(message) это функция, отвечающая за раздел товара, отображение кнопок.
16.def gainerChapter(message) - это функция, отвечающая за раздел товара, отображение кнопок.
17.def proteinbarChapter(message) - это функция, отвечающая за раздел товара, отображение кнопок.
18.def bcaaChapter(message) - это функция, отвечающая за раздел товара, отображение кнопок.
19.def settingsChapter(message) - это функция, отвечающая за раздел настроек, отображение кнопок.
20.def infoChapter(message) - это функция, отвечающая за раздел справки, отображение кнопок.
21.bot.polling(none_stop=True) - Бесконечная работа бота. none_stop=True отвечает за работу в режиме "нон-стоп". 
22.bot.send_message(message.chat.id, answers[random.randint(0, 3)]) - функция отвечает за рандомные ответы на неизвестные запросы пользователя.